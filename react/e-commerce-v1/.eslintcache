[{"E:\\Code\\React\\e_commerce\\src\\index.js":"1","E:\\Code\\React\\e_commerce\\src\\App.js":"2","E:\\Code\\React\\e_commerce\\src\\components\\Products\\Products.jsx":"3","E:\\Code\\React\\e_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","E:\\Code\\React\\e_commerce\\src\\components\\Products\\Product\\styles.js":"5","E:\\Code\\React\\e_commerce\\src\\components\\Navbar\\Navbar.jsx":"6","E:\\Code\\React\\e_commerce\\src\\components\\Navbar\\styles.js":"7","E:\\Code\\React\\e_commerce\\src\\components\\index.js":"8","E:\\Code\\React\\e_commerce\\src\\components\\Products\\styles.js":"9","E:\\Code\\React\\e_commerce\\src\\lib\\commerce.js":"10","E:\\Code\\React\\e_commerce\\src\\components\\Cart\\Cart.jsx":"11","E:\\Code\\React\\e_commerce\\src\\components\\Cart\\styles.js":"12","E:\\Code\\React\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","E:\\Code\\React\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":164,"mtime":1609557408300,"results":"21","hashOfConfig":"22"},{"size":3377,"mtime":1609939040615,"results":"23","hashOfConfig":"22"},{"size":859,"mtime":1609562082197,"results":"24","hashOfConfig":"22"},{"size":1373,"mtime":1609562188931,"results":"25","hashOfConfig":"22"},{"size":414,"mtime":1609479634172,"results":"26","hashOfConfig":"22"},{"size":1600,"mtime":1609634365348,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1609546228485,"results":"28","hashOfConfig":"22"},{"size":233,"mtime":1609653439177,"results":"29","hashOfConfig":"22"},{"size":324,"mtime":1609547812338,"results":"30","hashOfConfig":"22"},{"size":170,"mtime":1609936646053,"results":"31","hashOfConfig":"22"},{"size":2318,"mtime":1609653259144,"results":"32","hashOfConfig":"22"},{"size":679,"mtime":1609563863996,"results":"33","hashOfConfig":"22"},{"size":1540,"mtime":1609653042054,"results":"34","hashOfConfig":"22"},{"size":389,"mtime":1609567464173,"results":"35","hashOfConfig":"22"},{"size":3984,"mtime":1609939503449,"results":"36","hashOfConfig":"22"},{"size":1382,"mtime":1609715331732,"results":"37","hashOfConfig":"22"},{"size":3042,"mtime":1609939450559,"results":"38","hashOfConfig":"22"},{"size":5493,"mtime":1609868540606,"results":"39","hashOfConfig":"22"},{"size":591,"mtime":1609937222921,"results":"40","hashOfConfig":"22"},{"size":1113,"mtime":1609912965639,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1j12rs9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\Code\\React\\e_commerce\\src\\index.js",[],["85","86"],"E:\\Code\\React\\e_commerce\\src\\App.js",["87"],"E:\\Code\\React\\e_commerce\\src\\components\\Products\\Products.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\Products\\Product\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\Navbar\\Navbar.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\Navbar\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\index.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\Products\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\lib\\commerce.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\Cart\\Cart.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\Cart\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["88"],"E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",["89"],"import React from 'react'\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport Review from './Review';\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51I6aM7BXTlMMwXPYVaOA5KPN02QuMK6ytHLr3VDPJm3FElncwIp9uWAFPs5yhxA9Bq4qexCoI5J2YqibXLT2qf0400LkHQhkZd\");\r\n\r\nconst PaymentForm = ({ timeout, nextStep, checkoutToken, shippingData, backStep, onCaptureCheckout }) => {\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n        event.preventDefault();\r\n\r\n        if (!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n        if (error) {\r\n            console.log(error)\r\n        } else {\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n                shipping: {\r\n                    name: 'Primary',\r\n                    street: shippingData.address1,\r\n                    town_city: shippingData.city,\r\n                    country_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry,\r\n                },\r\n                fulfillment: { shipping_method: shippingData.shippingOption },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            timeout();\r\n\r\n            nextStep();\r\n\r\n            // onCaptureCheckout(checkoutToken.id, orderData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>{({ elements, stripe }) => (\r\n                    <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                        <CardElement />\r\n                        <br /> <br />\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                            <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\r\n                                Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n                </ElementsConsumer>\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from './CustomTextField';\r\nimport { commerce } from '../../lib/commerce';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingsubdivisions, setShippingsubdivisions] = useState([]);\r\n    const [shippingsubdivision, setShippingsubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }))\r\n    const subdivisions = Object.entries(shippingsubdivisions).map(([code, name]) => ({ id: code, label: name }))\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - ${sO.price.formatted_with_symbol}` }))\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingsubdivisions(subdivisions);\r\n        setShippingsubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry])\r\n\r\n    useEffect(() => {\r\n        if (shippingsubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingsubdivision);\r\n    }, [shippingsubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottm>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingsubdivision, shippingOption }))} >\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First name' />\r\n                        <FormInput name='lastName' label='Last name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zip' label='ZIP / Postal code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingsubdivision} fullWidth onChange={(e) => setShippingsubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"oulined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm;\r\n","E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"E:\\Code\\React\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":11,"column":19,"nodeType":"98","messageId":"99","endLine":11,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":31,"column":8,"nodeType":"102","endLine":31,"endColumn":14,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":22,"column":19,"nodeType":"98","messageId":"99","endLine":22,"endColumn":28},{"ruleId":"100","severity":1,"message":"105","line":44,"column":8,"nodeType":"102","endLine":44,"endColumn":10,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":52,"column":8,"nodeType":"102","endLine":52,"endColumn":29,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'setOrder' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'orderData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [cart, history]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingsubdivision]",{"range":"124","text":"125"},[1196,1202],"[cart, history]",[2106,2108],"[checkoutToken.id]",[2373,2394],"[checkoutToken.id, shippingCountry, shippingsubdivision]"]